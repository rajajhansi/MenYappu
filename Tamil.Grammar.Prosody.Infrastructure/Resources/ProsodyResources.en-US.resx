<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMenYappu" xml:space="preserve">
    <value>About MenYappu</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="Games" xml:space="preserve">
    <value>Games</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="LetterTypeFinder" xml:space="preserve">
    <value>Letter Type Finder</value>
  </data>
  <data name="LinkageFinder" xml:space="preserve">
    <value>Linkage Finder</value>
  </data>
  <data name="MathiraiCalculator" xml:space="preserve">
    <value>Mathirai Calculator</value>
  </data>
  <data name="MenYappu" xml:space="preserve">
    <value>MenYappu</value>
  </data>
  <data name="MetricalFootFinder" xml:space="preserve">
    <value>Metrical Foot Finder</value>
  </data>
  <data name="MetricalLineMeasurer" xml:space="preserve">
    <value>Metrical Line Measurer</value>
  </data>
  <data name="OrnamentationFinder" xml:space="preserve">
    <value>Oranamentation Finder</value>
  </data>
  <data name="RhymeAlliterationFinder" xml:space="preserve">
    <value>Rhyme/Alliteration Finder</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SyllableDivider" xml:space="preserve">
    <value>Syllable Divider</value>
  </data>
  <data name="Venpaas" xml:space="preserve">
    <value>Venpaas</value>
  </data>
  <data name="VenpaaConversations" xml:space="preserve">
    <value>Venpaa Conversations</value>
  </data>
  <data name="WriteAPaa" xml:space="preserve">
    <value>Paa Writer</value>
  </data>
  <data name="Alliteration" xml:space="preserve">
    <value>Alliteration</value>
  </data>
  <data name="CheckAnswer" xml:space="preserve">
    <value>Check Answer</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CompareWithVenpaaRules" xml:space="preserve">
    <value>Compare with Venpaa rules</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="DoNotParseShortUBeforeInitialVowels" xml:space="preserve">
    <value>Do not parse initial vowels before short-u</value>
  </data>
  <data name="EliminateVilaankaayMetricalFeet" xml:space="preserve">
    <value>Elimiate Vilaankaay Metrica Feet</value>
  </data>
  <data name="EndRhyme" xml:space="preserve">
    <value>End Rhyme</value>
  </data>
  <data name="HowToSeeTheResult" xml:space="preserve">
    <value>After you enter the answer(s), click on "Check Answer" button to see the "Result".</value>
  </data>
  <data name="InputTheVerse" xml:space="preserve">
    <value>Input Verse</value>
  </data>
  <data name="InputWord" xml:space="preserve">
    <value>Input Word</value>
  </data>
  <data name="Letter" xml:space="preserve">
    <value>Letter</value>
  </data>
  <data name="LetterTypeFinderInfoTip" xml:space="preserve">
    <value>Either enter only one word (or) click on "Sample" button below.</value>
  </data>
  <data name="LetterTypes" xml:space="preserve">
    <value>Letter Types</value>
  </data>
  <data name="Linkage" xml:space="preserve">
    <value>Linkage</value>
  </data>
  <data name="MetremeAndMetricalFeet" xml:space="preserve">
    <value>Metreme &amp; Metrical Feet</value>
  </data>
  <data name="MetricalLine" xml:space="preserve">
    <value>Metrical Line</value>
  </data>
  <data name="Parse" xml:space="preserve">
    <value>Parse</value>
  </data>
  <data name="ParsedResults" xml:space="preserve">
    <value>Parsed Results</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Rhyme" xml:space="preserve">
    <value>Rhyme</value>
  </data>
  <data name="Sample" xml:space="preserve">
    <value>Sample</value>
  </data>
  <data name="SelectALetterType" xml:space="preserve">
    <value>Select Letter Type</value>
  </data>
  <data name="VenpaaRulesComparison" xml:space="preserve">
    <value>Venpaa Ruels Comparison</value>
  </data>
  <data name="Word" xml:space="preserve">
    <value>Word</value>
  </data>
  <data name="AboutMenYappuDetails" xml:space="preserve">
    <value>MenYappu is a website that has all the services essential for poem writers like spell checker/corrector, prosody games, poem composer and poem analyzer integrated and presented in a very simple, intuitive user interface. Since the services are also exposed as web services, mobile phone users can write an app in their preferred platforms like Apple IOS, Android or Windows Mobile usiing these web services and consume them.</value>
  </data>
  <data name="Asiriyappaa" xml:space="preserve">
    <value>Asiriyappaa</value>
  </data>
  <data name="Asiriyappaavinam" xml:space="preserve">
    <value>Asiriyappaavinam</value>
  </data>
  <data name="Audio" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="BogdanUrs" xml:space="preserve">
    <value>Mr. Bogdan Urs</value>
  </data>
  <data name="ClickThisButtonForHelp" xml:space="preserve">
    <value>Click this button for help</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CorrectDurationCount" xml:space="preserve">
    <value>Correct Duration Count</value>
  </data>
  <data name="Design" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="DurationCount" xml:space="preserve">
    <value>Duration Count</value>
  </data>
  <data name="EnterDurationCountAndCheckResult" xml:space="preserve">
    <value>Enter the Duration Count and click on "Check Answer" button to see the "Result". </value>
  </data>
  <data name="Executor" xml:space="preserve">
    <value>Executor</value>
  </data>
  <data name="InspirationAndMotivation" xml:space="preserve">
    <value>Inspiration/Motivation</value>
  </data>
  <data name="Kalippaa" xml:space="preserve">
    <value>Kalippaa</value>
  </data>
  <data name="Kalippaavinam" xml:space="preserve">
    <value>Kalippaavinam</value>
  </data>
  <data name="KandasamyPalanisamy" xml:space="preserve">
    <value>Mr. Kandasamy Palanisamy</value>
  </data>
  <data name="MathiraiCalculatorInfoTip" xml:space="preserve">
    <value>Enter only one word (or) sentence (or) click on "Sample" button below.</value>
  </data>
  <data name="Metreme" xml:space="preserve">
    <value>Metreme</value>
  </data>
  <data name="MetricalFeet" xml:space="preserve">
    <value>MetricalFeet</value>
  </data>
  <data name="Ornamentation" xml:space="preserve">
    <value>Ornamentation</value>
  </data>
  <data name="PaaCategories" xml:space="preserve">
    <value>Paa Categories</value>
  </data>
  <data name="PaaTypes" xml:space="preserve">
    <value>Paa Types</value>
  </data>
  <data name="Prosody" xml:space="preserve">
    <value>Prosody</value>
  </data>
  <data name="RajaMani" xml:space="preserve">
    <value>Mr. Raja Mani</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SoftwareDevelopment" xml:space="preserve">
    <value>Software Development</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="SuggestionAndReview" xml:space="preserve">
    <value>Suggestion/Review</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="Vanjippaa" xml:space="preserve">
    <value>Vanjippaa</value>
  </data>
  <data name="Vanjippaavinam" xml:space="preserve">
    <value>Vanjippaavinam</value>
  </data>
  <data name="Venpaa" xml:space="preserve">
    <value>Venpaa</value>
  </data>
  <data name="Venpaavinam" xml:space="preserve">
    <value>Venpaavinam</value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="VinodRajan" xml:space="preserve">
    <value>Mr. Vinod Rajan</value>
  </data>
  <data name="WordOrSentence" xml:space="preserve">
    <value>Word (or) Sentence</value>
  </data>
</root>